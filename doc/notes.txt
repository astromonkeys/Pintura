//

Little design notes file, just for me to remember

//

bigger TODOs:
- add p5.js sketch! make it look good
    - this will prob take a while and almost be a separate project by itself
- add basic weather widget
- implement more advanced spotify music playing functionality(searching, browsing the user's library, etc.)
- add fun stuff like animations n shadows n shit, definitely play around with the classes bootstrap offers in your html elements
- figure out refresh tokens/when to ask for them, not urgent
- more robust playlist searching, ability to search for songs too

// misc TODOs:
- fix not removing our device(s) when the window closes *** high(ish) priority if my current solution doesn't end up working after a delay
- some of my api calls may be unnecessary(ie getting entire track when I just need album artwork, etc.)
- implement scrubbing with the song progress bar
- make icons more sophisticated/colorful -> maybe use different svg library
- maybe save the state of the UI so on a refresh we can use that and it doesn't go to a blank slate
- play button icon is still wonky, maybe fix eventually cause it's weird but mostly works, has the same problem as the shuffle/repeat buttons of multiple places changing the icon
- multiple p5 sketches, give the user the option to choose between styles or dynamically select style(flow fields vs rectangle packing, etc)
    - ambient blobs (do first)
    - smoking (take advantage of slowness and unveil the sketch as its generated and the song progresses)

// KNOWN BUGS:
- playlist selection sometimes yields an undefined and fails


- Using bootstrap instead of a framework like react since things need to be lightweight, as the background graphics will be a bit performance hungry
    - plus, since there's only one page and minimal content that needs minimally sophisticated life cycle management
    - Maaaaaaaybe switch to react since component capability makes sense here
        - update: will not be doing this

- (not so) New auth flow:
    - call auth functions to get token and trigger page refresh
    - in the background, the playback sdk will set a boolean to true when it's ready
    - after auth flow has completed, wait until that boolean is true, then initialize web player with the token we got
        - this should typically be already ready to go once the auth flow is done, or a very short delay thereafter so it's probably(..?) fine

- p5.js has a print function defined! nice

- the red I'm using is #dc3545, border color is #af2e3a => maybe change?

- customize google search bar: https://programmablesearchengine.google.com/controlpanel/lookandfeel?cx=6372d402929ca4da2

<body onload="onPageLoad()">
    

        <!-- search bar -->
        <script async src="https://cse.google.com/cse.js?cx=6372d402929ca4da2"></script>
        <div style="border-radius: 10px;">
            <div class="gcse-search" id="searchBar"></div>
        </div>
        
        <br>

        <!-- spotify player, made from a bootstrap card (: -->
        <div id="spotify-widget">
            <div class="card mb-3 text-bg-dark text-center" style="max-width: 540px;">
                <div class="row g-0">
                    <!-- left half (album art) -->
                    <div class="col-md-4" id="art-container">
                        <img id="album_art" class="img-thumbnail" style="vertical-align: middle;">
                    </div>
                    <!-- right half (everything else)-->
                    <div class="col-md-8">
                        <div class="card-body text-center">
                            <div class="btn-group dropend" style="position: absolute;
                                top: 0px;
                                right: 0px;">
                                <button type="button" class="btn btn-link" data-bs-toggle="dropdown"
                                    aria-expanded="false"><img style="filter: invert(100%)"
                                        src="icons/search.svg"></button>
                                <ul class="dropdown-menu dropdown-menu-dark" overflow="scroll" id="playlistSelect">
                                    <!-- playlists added programmatically -->
                                </ul>
                            </div>
                            <h6>Now playing from: </h6>
                            <h5 id="nowPlaying">Your library</h5>
                            <div class="justify-content-evenly d-flex text-center">

                            </div>

                        </div>
                        <!-- song and artist info -->
                        <h6 id="songTitle" class="card-text"></h6>
                        <p id="artistName" class="card-text"></p>

                        <!-- progress bar -->
                        <div class="progress" style="height: 3px;">
                            <div class="progress-bar bg-danger" role="progressbar" id="playback-progress"
                                aria-label="playback-progress" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
                            </div>
                        </div>

                        <!-- music control buttons -->
                        <div class="btn-group" role="group" aria-label="Basic outlined example">
                            <button id="shufflebtn" type="button" class="btn btn-link" type="button"><img
                                    class="img-responsive" style="filter: invert(100%)" src="/icons/shuffle.svg"
                                    id="shuffle_img"></button>
                            <button id="rewindbtn" class="btn btn-link" type="button"><img style="filter: invert(100%)"
                                    src="/icons/rw.svg" id="rewind"></button>
                            <button id="playpausebtn" type="button" class="btn btn-link" type="button"><img
                                    style="filter: invert(100%)" src="/icons/play.svg" id="playpause"></button>
                            <button id="forwardbtn" type="button" class="btn btn-link" type="button"><img
                                    style="filter: invert(100%)" src="/icons/ff.svg" id="forward"></button>
                            <button id="repeatbtn" type="button" class="btn btn-link" type="button"><img
                                    class="img-responsive" style="filter: invert(100%)" src="/icons/repeat.svg"
                                    id="repeat"></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>